name: Build and Push Web Docker Image

on:
  push:
    paths:
      - ".github/workflows/web-docker-build.yml"
      - "packages/web/**"
      - "pnpm-lock.yaml"
      - "pnpm-workspace.yaml"
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      strapi_webhook_secret:
        description: "Strapi Webhook Secret (optional - falls back to secret)"
        required: false
        type: string
      next_public_strapi_base_url:
        description: "Next.js Public Strapi Base URL (optional - falls back to secret)"
        required: false
        type: string
      strapi_api_base_url:
        description: "Strapi API Base URL (optional - falls back to secret)"
        required: false
        type: string
      strapi_api_token:
        description: "Strapi API Token (optional - falls back to secret)"
        required: false
        type: string
      next_public_umami_script_url:
        description: "Next.js Public Umami Script URL (optional - falls back to secret)"
        required: false
        type: string
      next_public_umami_website_id:
        description: "Next.js Public Umami Website ID (optional - falls back to secret)"
        required: false
        type: string
      next_public_heyform_form_id:
        description: "Next.js Public HeyForm Form ID (optional - falls back to secret)"
        required: false
        type: string
      next_public_heyform_custom_url:
        description: "Next.js Public HeyForm Custom URL (optional - falls back to secret)"
        required: false
        type: string
      next_public_heyform_script_url:
        description: "Next.js Public HeyForm Script URL (optional - falls back to secret)"
        required: false
        type: string
      next_public_clarity_project_id:
        description: "Next.js Public Clarity Project ID (optional - falls back to secret)"
        required: false
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/web

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    permissions:
      contents: read
      packages: write
      id-token: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env.local file
        run: |
          mkdir -p packages/web
          cat > packages/web/.env.local << EOF
          STRAPI_WEBHOOK_SECRET=${{ inputs.strapi_webhook_secret || secrets.STRAPI_WEBHOOK_SECRET }}
          NEXT_PUBLIC_STRAPI_BASE_URL=${{ inputs.next_public_strapi_base_url || secrets.NEXT_PUBLIC_STRAPI_BASE_URL }}
          STRAPI_API_BASE_URL=${{ inputs.strapi_api_base_url || secrets.STRAPI_API_BASE_URL }}
          STRAPI_API_TOKEN=${{ inputs.strapi_api_token || secrets.STRAPI_API_TOKEN }}
          NEXT_PUBLIC_UMAMI_SCRIPT_URL=${{ inputs.next_public_umami_script_url || secrets.NEXT_PUBLIC_UMAMI_SCRIPT_URL }}
          NEXT_PUBLIC_UMAMI_WEBSITE_ID=${{ inputs.next_public_umami_website_id || secrets.NEXT_PUBLIC_UMAMI_WEBSITE_ID }}
          NEXT_PUBLIC_HEYFORM_FORM_ID=${{ inputs.next_public_heyform_form_id || secrets.NEXT_PUBLIC_HEYFORM_FORM_ID }}
          NEXT_PUBLIC_HEYFORM_CUSTOM_URL=${{ inputs.next_public_heyform_custom_url || secrets.NEXT_PUBLIC_HEYFORM_CUSTOM_URL }}
          NEXT_PUBLIC_HEYFORM_SCRIPT_URL=${{ inputs.next_public_heyform_script_url || secrets.NEXT_PUBLIC_HEYFORM_SCRIPT_URL }}
          NEXT_PUBLIC_CLARITY_PROJECT_ID=${{ inputs.next_public_clarity_project_id || secrets.NEXT_PUBLIC_CLARITY_PROJECT_ID }}
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch,prefix=preview-
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: packages/web/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secret-files: |
            "env_file=./packages/web/.env.local"
